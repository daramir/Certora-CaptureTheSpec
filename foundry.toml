[profile.default]
src = "src"
out = "out"
libs = ["lib"]
# auto_detect_remappings = true # recursive auto-detection of remappings
# remappings = []
## list of libraries to link in the form of `<path to lib>:<lib name>:<address>`: `"src/MyLib.sol:MyLib:0x8De6DDbCd5053d32292AAA0D2105A32d108484a6"`
## the <path to lib> supports remappings
# libraries = []
# cache = true
# cache_path = 'cache'
# broadcast = 'broadcast'
## additional solc allow paths
# allow_paths = []
## additional solc include paths
# include_paths = []
# force = false
# evm_version = 'shanghai'
# gas_reports = ['*']
# gas_reports_ignore = []
## Sets the concrete solc version to use, this overrides the `auto_detect_solc` value
solc = '0.8.27'
# auto_detect_solc = true
# offline = false
optimizer = true
optimizer_runs = 200
# model_checker = { contracts = { 'a.sol' = [
#     'A1',
#     'A2',
# ], 'b.sol' = [
#     'B1',
#     'B2',
# ] }, engine = 'chc', targets = [
#     'assert',
#     'outOfBounds',
# ], timeout = 10000 }
# verbosity = 0
# eth_rpc_url = "https://example.com/"
## Setting this option enables decoding of error traces from mainnet deployed / verified contracts via etherscan
#etherscan_api_key = "YOURETHERSCANAPIKEY"
## ignore solc warnings for missing license and exceeded contract size
## known error codes are: ["unreachable", "unused-return", "unused-param", "unused-var", "code-size", "shadowing", "func-mutability", "license", "pragma-solidity", "virtual-interfaces", "same-varname", "too-many-warnings", "constructor-visibility", "init-code-size", "missing-receive-ether", "unnamed-return", "transient-storage"]
## additional warnings can be added using their numeric error code: ["license", 1337]
# ignored_error_codes = ["license", "code-size"]
# ignored_warnings_from = ["path_to_ignore"]
# deny_warnings = false

# See more config options https://github.com/foundry-rs/foundry/blob/master/crates/config/README.md#all-options
